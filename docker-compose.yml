version: "3.8"

networks:
  kafka_network:

x-check-ports: &check-ports ./bin/check-ports:/bin/check-ports

x-service-template: &template
  restart: on-failure
  networks:
    - kafka_network
  healthcheck: &hc
    interval: 5s
    timeout: 3s
    start_period: 10s
    retries: 30
  volumes:
    - *check-ports

x-public-key: &pub >
  ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAILArDnLYVp+/JkcrJKHX5XDpFj2MdA6NmV09vh7DmVrD dind

x-private-key: &private |+
  -----BEGIN OPENSSH PRIVATE KEY-----
  b3BlbnNzaC1rZXktdjEAAAAABG5vbmUAAAAEbm9uZQAAAAAAAAABAAAAMwAAAAtzc2gtZW
  QyNTUxOQAAACCwKw5y2FafvyZHKySh1+Vw6RY9jHQOjZldPb4ew5lawwAAAJggO3ZdIDt2
  XQAAAAtzc2gtZWQyNTUxOQAAACCwKw5y2FafvyZHKySh1+Vw6RY9jHQOjZldPb4ew5laww
  AAAEA6oPfTO+faTshF1LXPJNKihyWNqL5QQejwBnFQ8UK4o7ArDnLYVp+/JkcrJKHX5XDp
  Fj2MdA6NmV09vh7DmVrDAAAAD3NwYXJrLWV4ZXJjaXNlcwECAwQFBg==
  -----END OPENSSH PRIVATE KEY-----

x-depends-on-kafka: &depends-on-kafka
  kafka1:
    condition: service_healthy
  kafka2:
    condition: service_healthy
  kafka3:
    condition: service_healthy

services:
  manager:
    <<: *template
    image: neshkeev/bash-notebook
    hostname: &name manager
    container_name: *name
    command: /usr/local/bin/entrypoint
    healthcheck:
      <<: *hc
      test: /bin/check-ports 8888
    ports:
      - "8888:8888"
    depends_on: *depends-on-kafka
    volumes:
      - *check-ports
      - ./bin/manager-entrypoint:/usr/local/bin/entrypoint
      - ./bin/manager.bash_aliases:/home/jovyan/.bash_aliases
      - ./work/work.ipynb:/home/jovyan/work/work.ipynb
    environment:
      KAFKA_HOST: kafka1
      KAFKA_PORT: 9092
      ZOOKEEPER_HOST: zoo
      ZOOKEEPER_PORT: 2181
      DIND_HOST: dind
      NOTEBOOK_ARGS: --NotebookApp.token='' --NotebookApp.password=''
      RESTARTABLE: yes
      SSH_PRIVATE_KEY: *private

  dind:
    <<: *template
    image: neshkeev/dind
    hostname: &name dind
    container_name: *name
    command: version
    healthcheck:
      <<: *hc
      test: sh /bin/check-ports 22
    volumes:
      - *check-ports
      - /var/run/docker.sock:/var/run/docker.sock
      - .:/${COMPOSE_PROJECT_NAME}
    environment:
      SSH_PUB_KEY: *pub

  zoo:
    <<: *template
    image: zookeeper:3.8
    hostname: &name zoo
    container_name: *name
    healthcheck:
      <<: *hc
      test: /bin/check-ports 2181
    environment:
      ZOO_MY_ID: 1

  kafka1: &broker
    <<: *template
    image: confluentinc/cp-kafka:7.4.0
    hostname: &name kafka1
    container_name: *name
    healthcheck:
      <<: *hc
      test: /bin/check-ports 9092
    depends_on:
      zoo:
        condition: service_healthy
    environment: &brocker_env
      KAFKA_BROKER_ID: 1
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka1:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3
      KAFKA_ZOOKEEPER_CONNECT: zoo:2181

  kafka2:
    << : *broker
    hostname: &name kafka2
    container_name: *name
    environment:
      <<: *brocker_env
      KAFKA_BROKER_ID: 2
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka2:9092

  kafka3:
    << : *broker
    hostname: &name kafka3
    container_name: *name
    environment:
      <<: *brocker_env
      KAFKA_BROKER_ID: 3
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka3:9092

  redpanda:
    <<: *template
    image: docker.redpanda.com/redpandadata/console:v2.2.4
    hostname: &name redpanda
    container_name: *name
    depends_on: *depends-on-kafka
    ports:
      - "8080:8080"
    healthcheck:
      <<: *hc
      test: sh /bin/check-ports 8080
    environment:
      KAFKA_BROKERS: kafka1:9092
